#!/usr/bin/php
<?
/**
 * Maki - tasks like a NINJA
 * 
 * @example
 *  maki --self install --path /usr/local
 *  maki --tasks filenamtasks.php
 *  maki list
 *  maki help
 *  maki taskname
 * or
 *  cd ~/www/my_app
 *  maki
 * 
 * 
 * Thnks 
 *  - CLICommander class
 *  - phpTerm
 * 
 **/


//@const
define('DIR_ROOT', realpath(__DIR__.'/..'));


//@base
require_once DIR_ROOT.'/lib/maki.php';



if(terminal()->ArgumentPassed('self'))
{
  $path = terminal()->ArgumentPassed('path') ? terminal()->GetArgumentValue('path').'/maki' : '/usr/local/maki' ;
  _install(terminal()->GetArgumentValue('self'), $path);

//verify file tasks, default file tasks.php on current directory
}
elseif(terminal()->ArgumentPassed('tasks'))
{
  $tasks_file = terminal()->GetArgumentValue('tasks');
}
else
{
  $tasks_file = getcwd().'/tasks.php';
}


//Humm... tasks_file...where are you?
if(!file_exists($tasks_file)){
  terminal()->WriteLine("Not found tasks file on current directory, please use --tasks fullpath/filenametasks",'red');
  exit(0);
}

//include utils tasks and your tasks to tasks
include DIR_ROOT.'/lib/utils_tasks.php';

//include your tasks
include $tasks_file;


//Filter and verify arguments from command line
$args = array_filter(terminal()->GetArguments(), function($v){
  return (terminal()->GetArgumentValue('tasks')!=$v);
});


//maybe do you like think that any command(list, help,...) are a maki task, it's true if you like! see lib/utils_tasks.php
//call_user_func_array('maki', $args);exit();



//dispatch commands
if(count($args)){
  _handlerCommands($args);
}else while (true) {
  $cmd = terminal()->Prompt("Maki>");
  $args=explode(' ', $cmd);
  _handlerCommands($args);
}




