#!/usr/bin/php
<?
/**
 * Sugar é uma ferramenta para deploy de aplicativos
 * 
 * @example
 *  sugar
 *    (assume que na pasta corrente há um ficheiro deploy.php)
 *  sugar --deploy filenamdeploy.php
 *  sugar list
 *  sugar help
 *  sugar taskname
 * or
 *  cd ~/www/my_app
 *  sugar
 * 
 * 
 * Thnks 
 *  - CLICommander class
 *  - phpTerm
 * 
 **/
require_once 'sugar.php';

//verify file deploy, default file deploy.php on current directory
if(terminal()->GetArgumentValue('deploy'))
  $deploy_file = terminal()->GetArgumentValue('deploy');
else
  $deploy_file = getcwd().'/deploy.php';
if(!file_exists($deploy_file)){
  terminal()->WriteLine("Not fount deploy file on current directory, please use --deploy fullpath/filenamedeploy",'red');
  exit(0);
}

//include utils tasks and your tasks to deploy
include 'utils_tasks.php';
include $deploy_file;


//Filter and verify arguments from command line
$args = array_filter(terminal()->GetArguments(), function($v){
  return (terminal()->GetArgumentValue('deploy')!=$v);
});

//maybe do you like think that any command(list, help,...) are a sugar task, it's true if you like!
//call_user_func_array('sugar', $args);

if(count($args)){
  handlerCommands($args);
}else while (true) {
  $cmd = terminal()->Prompt("Sugar>");
  $args=explode(' ', $cmd);
  handlerCommands($args);
}




/**
 * Execute arguments from command line
 * 
 */
function handlerCommands($args){
  $cmd = strtolower($args[0]);
  switch ($cmd) {
    case 'help':
    case 'commands':
      terminal()->WriteLine("Available commands:");
      terminal()->WriteLine(" * help or commands  Prints this help");
      terminal()->WriteLine(" * exit              Exits this shell");
      terminal()->WriteLine(" * tasks or list     List all task on stack");
      terminal()->WriteLine(" * task              Run task");
      terminal()->WriteLine(" * clear             Clear terminal");
      //terminal()->writeLine(" * file          Open file deploy");
      break;
    case 'exit':
      terminal()->WriteLine("Goodbye!");
      exit(0);
    case 'clear':
      terminal()->Clear();
      break;
    case 'list':
    case 'tasks':
      print_tasks(Sugar::$STACK_TASKS);
      break;
    case 'task':
    case 'sugar':
      try {
        $result = call_user_func_array('sugar', $args);
      } catch (TaskNotFountException $e) {
        terminal()->WriteLine("task (".implode(', ', $args).") not found!",'red');
      }
      break;
    default:
      call_user_func_array('sugar', $args);;
  }
}

